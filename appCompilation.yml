parameters:
  - name: dotnetVersion
    type: string
  - name: config
    displayName: Project to compile
    type: string
    values:
      - 'Release'
      - 'Debug'
    default: 'Debug'
  - name: framework
    displayName: Framework (platform)
    type: string
    values:
      - net8.0-android34
      - net8.0-windows10.0.19041.0
    default: net8.0-windows10.0.19041.0
  - name: skipEnvPrep
    displayName: Skip environment preparation
    type: boolean
    default: false
  - name: outputArtifactName
    type: string
  

stages:
- stage: 
  displayName: Compilation
  jobs:
    - ${{ if contains(parameters.framework, 'android') }}:
      - job: Android_compilation
        displayName: Android app compilation
        steps:
          - task: UseDotNet@2
            displayName: Use .NET SDK ${{ parameters.dotnetVersion }}
            inputs:
              version: ${{ parameters.dotnetVersion }}
              includePreviewVersions: true
              installationPath: $(Agent.ToolsDirectory)/dotnet/${{ parameters.dotnetVersion }}
              packageType: sdk
              useGlobalJson: false
              performMultiLevelLookup: false

          - task: JavaToolInstaller@0
            displayName: Use JAVA_HOME
            # Make sure to set up environmental variable as in template: 
            # Name: `JAVA_HOME_${versionSpec}_${jdkArchitectureOption}` and value pointing to its JAVA_HOME 
            # (via https://stackoverflow.com/a/72314866/14345698)
            inputs:
              versionSpec: 11
              jdkArchitectureOption: x64
              jdkSourceOption: PreInstalled

          - task: DownloadSecureFile@1
            inputs:
              secureFile: $(AndroidKeystoreName).keystore

          - task: DotNetCoreCLI@2
            displayName: Publish app
            inputs:
              command: publish
              zipAfterPublish: false
              publishWebProjects: false
              projects: SMCEBI_Navigator\SMCEBI_Navigator.csproj
              ${{ if eq(parameters.config, 'Release') }}:
                arguments: '-f net8.0-android34 -c Release'
              ${{ else }}:
                arguments: '-f net8.0-android34 -c Debug'

          - task: AndroidSigning@3
            displayName: Signing and aligning APK file(s) **/*.apk
            inputs:
              zipalign: true
              keystoreFile: $(AndroidKeystoreName).keystore
              keystorePass: $(AndroidKeystoreSigningPassword)
              keystoreAlias: $(AndroidKeystoreName)
              keyPass: $(AndroidKeystoreSigningPassword)
          
          # - task: CopyFiles@2
          #   inputs:
          #     sourceFolder: $(Build.SourcesDirectory)/SMCEBI_Navigator/bin
          #     contents: '**'
          #     targetFolder: $(Build.BinariesDirectory)/$(Build.BuildNumber)_net8_0-windows10_0_19041_0

          - publish: $(Build.SourcesDirectory)/SMCEBI_Navigator/bin
            displayName: Publish compiled app
            artifact: '$(Build.BuildNumber)_${{ parameters.framework }}'

          - pwsh: echo "##vso[task.setvariable variable=outputArtifactName;isOutput=true]$(Build.BuildNumber)_${{ parameters.framework }}"
            displayName: Export artifact name to pipeline
    
    - ${{ if contains(parameters.framework, 'windows') }}:
      - job: Windows_compilation
        displayName: Windows app compilation
        steps:
          - task: UseDotNet@2
            displayName: Use .NET SDK ${{ parameters.dotnetVersion }}
            inputs:
              version: ${{ parameters.dotnetVersion }}
              includePreviewVersions: true
              installationPath: $(Agent.ToolsDirectory)/dotnet/${{ parameters.dotnetVersion }}
              packageType: sdk
              useGlobalJson: false
              performMultiLevelLookup: false
              
          - task: DotNetCoreCLI@2
            displayName: Publish desktop app
            inputs:
              command: publish
              zipAfterPublish: false
              publishWebProjects: false
              projects: SMCEBI_Navigator\SMCEBI_Navigator.csproj
              ${{ if eq(parameters.config, 'Release') }}:
                arguments: '-f net8.0-windows10.0.19041.0 -c Release'
              ${{ else }}:
                arguments: '-f net8.0-windows10.0.19041.0 -c Debug'

          # - task: CopyFiles@2
          #   inputs:
          #     sourceFolder: $(Build.SourcesDirectory)/SMCEBI_Navigator/bin
          #     contents: '**'
          #     targetFolder: $(Build.BinariesDirectory)/$(Build.BuildNumber)_net8_0-windows10_0_19041_0

          - publish: $(Build.SourcesDirectory)/SMCEBI_Navigator/bin
            displayName: Publish full compiled app
            artifact: '$(Build.BuildNumber)_${{ parameters.framework }}'

          - pwsh: echo "##vso[task.setvariable variable=outputArtifactName;isOutput=true]$(Build.BuildNumber)_${{ parameters.framework }}"
            displayName: Export artifact name to pipeline

          - pwsh: echo $(outputArtifactName)
            displayName: Echo outputted name