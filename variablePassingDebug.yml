# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  name: Self-hosted pool

variables:
- name: WindowsArtifactName
  value: ''
- name: AndroidArtifactName
  value: ''

stages:
  - stage: Quick_debug
    jobs:
      - job: EmptyVars
        steps:
          - checkout: none
          - pwsh: |
              Write-Host $(WindowsArtifactName)
              $winVar = $(WindowsArtifactName)
              Write-Host $winVar
              echo $winVar
            displayName: logging $ WindowsArtifactName
          - pwsh: |
              Write-Host $(AndroidArtifactName)
              $aVar = $(AndroidArtifactName)
              Write-Host $aVar
              echo $aVar
            displayName: logging $ AndroidArtifactName

          - pwsh: |
              Write-Host "$env:WINDOWSARTIFACTNAME"
              $winVar2 = Write-Host "$env:WINDOWSARTIFACTNAME"
              Write-Host $winVar2
              echo $winVar2
            displayName: logging env:WINDOWSARTIFACTNAME
          - pwsh: |
              Write-Host "$env:ANDROIDARTIFACTNAME"
              $aVar2 = "$env:ANDROIDARTIFACTNAME"
              Write-Host $aVar2
              echo $aVar2
            displayName: logging env:ANDROIDARTIFACTNAME



      - job: Assignment
        dependsOn: EmptyVars
        displayName: Assignment
        steps:
          # - checkout: none
          - pwsh: Write-Host "##vso[task.setvariable variable=WindowsArtifactName;isOutput=true]whatevertestingWin"
            displayName: Export artifact name to pipeline
          - pwsh: Write-Host "##vso[task.setvariable variable=AndroidArtifactName;isOutput=true]whatevertestingAndroid"
            displayName: Export artifact name to pipeline

          - pwsh: |
              Write-Host $(WindowsArtifactName)
              $winVar = $(WindowsArtifactName)
              Write-Host $winVar
              echo $winVar
              pwsh.exe trueLog.ps1 -inputText $winVar
            displayName: logging $ WindowsArtifactName
          - pwsh: |
              Write-Host $(AndroidArtifactName)
              $aVar = $(AndroidArtifactName)
              Write-Host $aVar
              echo $aVar
              pwsh.exe trueLog.ps1 -inputText $aVar
            displayName: logging $ AndroidArtifactName
          - pwsh: |
              Write-Host "$env:WINDOWSARTIFACTNAME"
              $winVar2 = Write-Host "$env:WINDOWSARTIFACTNAME"
              Write-Host $winVar2
              echo $winVar2
              pwsh.exe trueLog.ps1 -inputText $winVar2
            displayName: logging env:WINDOWSARTIFACTNAME
          - pwsh: |
              Write-Host "$env:ANDROIDARTIFACTNAME"
              $aVar2 = "$env:ANDROIDARTIFACTNAME"
              Write-Host $aVar2
              echo $aVar2
              pwsh.exe trueLog.ps1 -inputText $aVar2
            displayName: logging env:ANDROIDARTIFACTNAME
            
      - job: filled
        dependsOn: Assignment
        steps:
          # - checkout: none
          - pwsh: |
              Write-Host $(WindowsArtifactName)
              $winVar = $(WindowsArtifactName)
              Write-Host $winVar
              echo $winVar
              pwsh.exe trueLog.ps1 -inputText $winVar
            displayName: logging $ WindowsArtifactName
          - pwsh: |
              Write-Host $(AndroidArtifactName)
              $aVar = $(AndroidArtifactName)
              Write-Host $aVar
              echo $aVar
              pwsh.exe trueLog.ps1 -inputText $aVar
            displayName: logging $ AndroidArtifactName
          - pwsh: |
              Write-Host "$env:WINDOWSARTIFACTNAME"
              $winVar2 = Write-Host "$env:WINDOWSARTIFACTNAME"
              Write-Host $winVar2
              echo $winVar2
              pwsh.exe trueLog.ps1 -inputText $winVar2
            displayName: logging env:WINDOWSARTIFACTNAME
          - pwsh: |
              Write-Host "$env:ANDROIDARTIFACTNAME"
              $aVar2 = "$env:ANDROIDARTIFACTNAME"
              Write-Host $aVar2
              echo $aVar2
              pwsh.exe trueLog.ps1 -inputText $aVar2
            displayName: logging env:ANDROIDARTIFACTNAME

